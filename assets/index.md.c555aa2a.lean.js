import{_ as v}from"./chunks/lmql.17cc0505.js";import{_ as m,o as p,c as o,k as s,r as i,p as f,m as b,e as L,n as x,h as q,F as _,D as j,t as g,l as c,H as h,w as e,a as d,a0 as M}from"./chunks/framework.980cae92.js";const A={},u=a=>(f("data-v-fb660782"),a=a(),b(),a),S={class:"hero"},k=u(()=>s("img",{src:v,alt:"LMQL"},null,-1)),N=u(()=>s("img",{src:v,alt:"LMQL"},null,-1)),T=u(()=>s("br",null,null,-1)),E={class:"tagline"},C=u(()=>s("div",{class:"buttons"},[s("a",{class:"primary btn",href:"/docs/"}," Get Started "),s("a",{class:"btn",href:"https://github.com/eth-sri/lmql#contribute')"}," Contribute ")],-1));function W(a,n){return p(),o("div",S,[k,s("div",null,[s("h1",null,[N,i(a.$slots,"title",{},void 0,!0),T]),s("h2",E,[i(a.$slots,"subtitle",{},void 0,!0)]),C])])}const Q=m(A,[["render",W],["__scopeId","data-v-fb660782"]]);const R={key:0,class:"badge"},I={class:"reveal"},P={__name:"LMFeature",props:["template","new"],setup(a){return(n,w)=>(p(),o("div",{class:x(["feature",a.template])},[s("div",null,[s("h1",null,[i(n.$slots,"default",{},void 0,!0),a.new?(p(),o("span",R,"NEW")):L("",!0)]),s("p",null,[i(n.$slots,"description",{},void 0,!0)])]),s("code",I,[i(n.$slots,"code",{},void 0,!0)])],2))}},Y=m(P,[["__scopeId","data-v-9d5b0837"]]),H=JSON.parse(`[{"snippet":"","description":"<div class=\\"language-lmql vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">lmql</span><pre class=\\"hljs\\"><code><span class=\\"line\\"><div class=\\"window-controls\\"><div class=\\"window-control window-control-close\\"></div><div class=\\"window-control window-control-minimize\\"></div><div class=\\"window-control window-control-maximize\\"></div></div><span class=\\"hljs-meta\\">@lmql.query</span>\\n<span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title function_\\">meaning_of_life</span>():\\n    <span class=\\"hljs-inline-lmql\\"><span class='inline-lmql-delim'>&#x27;&#x27;&#x27;lmql</span>\\n    <span class=\\"hljs-comment\\"># top-level strings are prompts</span>\\n    <span class=\\"hljs-string\\">&quot;Q: What is the answer to life, the \\\\\\n     universe and everything?&quot;</span>\\n\\n    <span class=\\"hljs-comment\\"># generation via (constrained) variables</span>\\n    <span class=\\"hljs-string\\">&quot;A: <span class=\\"hljs-placeholder\\">[ANSWER]</span>&quot;</span> <span class=\\"hljs-keyword\\">where</span> \\\\\\n        <span class=\\"hljs-built_in\\">len</span>(ANSWER) &lt; 120 <span class=\\"hljs-keyword\\">and</span> STOPS_AT(ANSWER, <span class=\\"hljs-string\\">&quot;.&quot;</span>)\\n\\n    <span class=\\"hljs-comment\\"># results are directly accessible</span>\\n    <span class=\\"hljs-built_in\\">print</span>(<span class=\\"hljs-string\\">&quot;LLM returned&quot;</span>, ANSWER)\\n\\n    <span class=\\"hljs-comment\\"># use typed variables for guaranteed </span>\\n    <span class=\\"hljs-comment\\"># output format</span>\\n    <span class=\\"hljs-string\\">&quot;The answer is <span class=\\"hljs-placeholder\\">[NUM: <span class=\\"hljs-built_in\\">int</span>]</span>&quot;</span>\\n\\n    <span class=\\"hljs-comment\\"># query programs are just functions </span>\\n    <span class=\\"hljs-keyword\\">return</span> NUM\\n    <span class='inline-lmql-delim'>&#x27;&#x27;&#x27;</span></span>\\n\\n<span class=\\"hljs-comment\\"># so from Python, you can just do this</span>\\nmeaning_of_life() <span class=\\"hljs-comment\\"># 42</span>\\n</span></code></pre>\\n</div><br/>\\n<center style=\\"font-size: 10pt\\">\\n<p>Created by the <a href=\\"http://sri.inf.ethz.ch/\\" target=\\"_blank\\" rel=\\"noreferrer\\">SRI Lab</a> @ ETH Zurich and <a href=\\"https://github.com/eth-sri/lmql\\" target=\\"_blank\\" rel=\\"noreferrer\\">contributors</a>.</p>\\n<br/>\\n<div class=\\"github-star\\">\\n    <a class=\\"github-button\\" href=\\"https://github.com/eth-sri/lmql\\" data-color-scheme=\\"light\\" data-show-count=\\"true\\" aria-label=\\"Star LMQL on GitHub\\">Star</a>\\n</div>\\n</center>\\n","title":null,"template":"code"},{"snippet":"<div class=\\"language-promptdown vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">promptdown</span><pre animate=\\"true\\" pd-text=\\"# Execution Trace\\n\\n![_|Q: When was Obama born?][@wait|200][@begin|incontext][dateformat|(respond in DD/MM/YYYY)][@end|incontext][@wait|200][ANSWER|04/08/1961][@wait|200][@fade|incontext][@wait|200][@hide|incontext][@wait|200]\\n![_|Q: When was Bruno Mars born?][@wait|200][@begin|incontext1][dateformat|(respond in DD/MM/YYYY)][@end|incontext1][@wait|200][ANSWER|08/10/1985][@wait|200][@fade|incontext1][@wait|200][@hide|incontext1][@wait|200]\\n![_|Q: When was Dua Lipa born?][@wait|200][@begin|incontext2][dateformat|(respond in DD/MM/YYYY)][@end|incontext2][@wait|200][ANSWER|22/08/1995][@wait|200][@fade|incontext2][@wait|200][@hide|incontext2][@wait|200]\\n\\n[_|Out of these, who was born last?][LAST|Dua Lipa]\\n[:replay]\\" __animate=\\"true\\" animate-speed=\\"50\\" class=\\"promptdown promptdown-compiled\\" style=\\"opacity: 1;\\"><h1 pd-shadow-id=\\"2656\\" text=\\" \\"> Execution Trace</h1><p pd-shadow-id=\\"2658\\" text=\\"\\n\\" pd-insertion-point=\\"true\\">\\n<span pd-shadow-id=\\"2660\\" pd-instant=\\"true\\" text=\\"\\" class=\\"promptdown-var color-none\\"><span pd-shadow-id=\\"2661\\" text=\\"\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\"></span>Q: When was Obama born?</span><span pd-shadow-id=\\"2664\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-pink\\"><span pd-shadow-id=\\"2665\\" text=\\"w\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">wait</span>200</span><span pd-shadow-id=\\"2669\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-yellow\\"><span pd-shadow-id=\\"2670\\" text=\\"b\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">begin</span>incontext</span><p pd-shadow-id=\\"2674\\" id=\\"incontext\\" text=\\"\\" pd-ignore-whitespace=\\"true\\" class=\\"promptdown-container faded\\" style=\\"display: none;\\"><span pd-shadow-id=\\"2675\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-yellow\\"><span pd-shadow-id=\\"2676\\" text=\\"d\\" class=\\"promptdown-var-name\\">dateformat</span>(respond in DD/MM/YYYY)</span><span pd-shadow-id=\\"2680\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-orange\\"><span pd-shadow-id=\\"2681\\" text=\\"e\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">end</span>incontext</span></p><span pd-shadow-id=\\"2685\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-pink\\"><span pd-shadow-id=\\"2686\\" text=\\"w\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">wait</span>200</span><span pd-shadow-id=\\"2690\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-ochre\\"><span pd-shadow-id=\\"2691\\" text=\\"A\\" class=\\"promptdown-var-name\\">ANSWER</span>04/08/1961</span><span pd-shadow-id=\\"2695\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-pink\\"><span pd-shadow-id=\\"2696\\" text=\\"w\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">wait</span>200</span><span pd-shadow-id=\\"2700\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-red\\"><span pd-shadow-id=\\"2701\\" text=\\"f\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">fade</span>incontext</span><span pd-shadow-id=\\"2705\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-pink\\"><span pd-shadow-id=\\"2706\\" text=\\"w\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">wait</span>200</span><span pd-shadow-id=\\"2710\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-ochre\\"><span pd-shadow-id=\\"2711\\" text=\\"h\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">hide</span>incontext</span><span pd-shadow-id=\\"2715\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-pink\\"><span pd-shadow-id=\\"2716\\" text=\\"w\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">wait</span>200</span>\\n<span pd-shadow-id=\\"2721\\" pd-instant=\\"true\\" text=\\"\\" class=\\"promptdown-var color-none\\"><span pd-shadow-id=\\"2722\\" text=\\"\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\"></span>Q: When was Bruno Mars born?</span><span pd-shadow-id=\\"2725\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-pink\\"><span pd-shadow-id=\\"2726\\" text=\\"w\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">wait</span>200</span><span pd-shadow-id=\\"2730\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-yellow\\"><span pd-shadow-id=\\"2731\\" text=\\"b\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">begin</span>incontext1</span><p pd-shadow-id=\\"2735\\" id=\\"incontext1\\" text=\\"\\" pd-ignore-whitespace=\\"true\\" class=\\"promptdown-container faded\\" style=\\"display: none;\\"><span pd-shadow-id=\\"2736\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-yellow\\"><span pd-shadow-id=\\"2737\\" text=\\"d\\" class=\\"promptdown-var-name\\">dateformat</span>(respond in DD/MM/YYYY)</span><span pd-shadow-id=\\"2741\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-orange\\"><span pd-shadow-id=\\"2742\\" text=\\"e\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">end</span>incontext1</span></p><span pd-shadow-id=\\"2746\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-pink\\"><span pd-shadow-id=\\"2747\\" text=\\"w\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">wait</span>200</span><span pd-shadow-id=\\"2751\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-ochre\\"><span pd-shadow-id=\\"2752\\" text=\\"A\\" class=\\"promptdown-var-name\\">ANSWER</span>08/10/1985</span><span pd-shadow-id=\\"2756\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-pink\\"><span pd-shadow-id=\\"2757\\" text=\\"w\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">wait</span>200</span><span pd-shadow-id=\\"2761\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-red\\"><span pd-shadow-id=\\"2762\\" text=\\"f\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">fade</span>incontext1</span><span pd-shadow-id=\\"2766\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-pink\\"><span pd-shadow-id=\\"2767\\" text=\\"w\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">wait</span>200</span><span pd-shadow-id=\\"2771\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-ochre\\"><span pd-shadow-id=\\"2772\\" text=\\"h\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">hide</span>incontext1</span><span pd-shadow-id=\\"2776\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-pink\\"><span pd-shadow-id=\\"2777\\" text=\\"w\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">wait</span>200</span>\\n<span pd-shadow-id=\\"2782\\" pd-instant=\\"true\\" text=\\"\\" class=\\"promptdown-var color-none\\"><span pd-shadow-id=\\"2783\\" text=\\"\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\"></span>Q: When was Dua Lipa born?</span><span pd-shadow-id=\\"2786\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-pink\\"><span pd-shadow-id=\\"2787\\" text=\\"w\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">wait</span>200</span><span pd-shadow-id=\\"2791\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-yellow\\"><span pd-shadow-id=\\"2792\\" text=\\"b\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">begin</span>incontext2</span><p pd-shadow-id=\\"2796\\" id=\\"incontext2\\" text=\\"\\" pd-ignore-whitespace=\\"true\\" class=\\"promptdown-container faded\\" style=\\"display: none;\\"><span pd-shadow-id=\\"2797\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-yellow\\"><span pd-shadow-id=\\"2798\\" text=\\"d\\" class=\\"promptdown-var-name\\">dateformat</span>(respond in DD/MM/YYYY)</span><span pd-shadow-id=\\"2802\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-orange\\"><span pd-shadow-id=\\"2803\\" text=\\"e\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">end</span>incontext2</span></p><span pd-shadow-id=\\"2807\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-pink\\"><span pd-shadow-id=\\"2808\\" text=\\"w\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">wait</span>200</span><span pd-shadow-id=\\"2812\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-ochre\\"><span pd-shadow-id=\\"2813\\" text=\\"A\\" class=\\"promptdown-var-name\\">ANSWER</span>22/08/1995</span><span pd-shadow-id=\\"2817\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-pink\\"><span pd-shadow-id=\\"2818\\" text=\\"w\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">wait</span>200</span><span pd-shadow-id=\\"2822\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-red\\"><span pd-shadow-id=\\"2823\\" text=\\"f\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">fade</span>incontext2</span><span pd-shadow-id=\\"2827\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-pink\\"><span pd-shadow-id=\\"2828\\" text=\\"w\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">wait</span>200</span><span pd-shadow-id=\\"2832\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-ochre\\"><span pd-shadow-id=\\"2833\\" text=\\"h\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">hide</span>incontext2</span><span pd-shadow-id=\\"2837\\" pd-instant=\\"false\\" pd-cmd=\\"true\\" text=\\"\\" class=\\"promptdown-var cmd color-pink\\"><span pd-shadow-id=\\"2838\\" text=\\"w\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">wait</span>200</span>\\n\\n<span pd-shadow-id=\\"2843\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-none\\"><span pd-shadow-id=\\"2844\\" text=\\"\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\"></span>Out of these, who was born last?</span><span pd-shadow-id=\\"2847\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-pink\\"><span pd-shadow-id=\\"2848\\" text=\\"L\\" class=\\"promptdown-var-name\\">LAST</span>Dua Lipa</span>\\n</p><button onclick=\\"pd(this.parentElement)\\" class=\\"promptdown-button-replay\\">↺ Replay</button></pre>\\n</div>","description":"<p>LMQL now supports nested queries, enabling modularized local instructions and re-use of prompt components.</p>\\n<br/>\\n<a class=\\"btn\\" href=\\"../docs/language/nestedqueries.html\\">\\nLearn more\\n</a>\\n","title":"Nested Queries bring Procedural Programming to Prompting","template":"side-by-side","new":0.7},{"snippet":"","description":"<p>LMQL automatically makes your LLM code portable across several backends. You can switch between them with a single line of code.</p>\\n<div class=\\"cards\\">\\n    <a href=\\"../docs/models/llama.cpp.html\\">\\n        <span style=\\"font-size: 3.0em;\\">🦙</span>\\n        <h1>llama.cpp</h1>\\n    </a>\\n    <a href=\\"../docs/models/openai.html\\">\\n        <img src=\\"/openai.svg\\" alt=\\"OpenAI\\" class=\\"invert\\"/>\\n        <h1>OpenAI</h1>\\n    </a>\\n    <a href=\\"../docs/models/hf.html\\">\\n        <span style=\\"font-size: 3.0em;\\">🤗</span>\\n        <h1>Transformers</h1>\\n    </a>\\n</div>\\n","title":"Works Across Backends","template":"middle"}]`),r=JSON.parse(`[{"id":0,"path":"/features/examples/1-packing-list.html","title":"🌴 Packing List","description":"<p>Prompt construction and generation is implemented via expressive <em>Python control flow and string interpolation</em>.</p>\\n","code":"<div class=\\"language-lmql vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">lmql</span><pre class=\\"hljs\\"><code><span class=\\"line\\"><span class=\\"hljs-comment\\"># top level strings are prompts</span>\\n<span class=\\"hljs-string\\">&quot;My packing list for the trip:&quot;</span>\\n\\n<span class=\\"hljs-comment\\"># use loops for repeated prompts</span>\\n<span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> <span class=\\"hljs-built_in\\">range</span>(<span class=\\"hljs-number\\">4</span>):\\n    <span class=\\"hljs-comment\\"># &#x27;where&#x27; denotes hard constraints enforced by the runtime</span>\\n    <span class=\\"hljs-string\\">&quot;- <span class=\\"hljs-placeholder\\">[THING]</span> \\\\n&quot;</span> <span class=\\"hljs-keyword\\">where</span> THING <span class=\\"hljs-keyword\\">in</span> \\\\ \\n        [<span class=\\"hljs-string\\">&quot;Volleyball&quot;</span>, <span class=\\"hljs-string\\">&quot;Sunscreen&quot;</span>, <span class=\\"hljs-string\\">&quot;Bathing Suite&quot;</span>]\\n</span></code></pre>\\n</div>","output":"<div class=\\"language-promptdown vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">promptdown</span><pre pd-text=\\"My packing list for the trip:\\n\\n- [THING| Volleyball]\\n- [THING| Bathing Suite]\\n- [THING| Sunscreen]\\n- [THING| Volleyball]\\n\\" animate=\\"true\\" __animate=\\"true\\" animate-speed=\\"50\\" class=\\"promptdown promptdown-compiled\\" style=\\"opacity: 1;\\"><p pd-shadow-id=\\"2310\\" text=\\"M\\" pd-insertion-point=\\"true\\">My packing list for the trip:\\n\\n- <span pd-shadow-id=\\"2312\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-lightorange\\"><span pd-shadow-id=\\"2313\\" text=\\"T\\" class=\\"promptdown-var-name\\">THING</span> Volleyball</span>\\n- <span pd-shadow-id=\\"2318\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-lightorange\\"><span pd-shadow-id=\\"2319\\" text=\\"T\\" class=\\"promptdown-var-name\\">THING</span> Bathing Suite</span>\\n- <span pd-shadow-id=\\"2324\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-lightorange\\"><span pd-shadow-id=\\"2325\\" text=\\"T\\" class=\\"promptdown-var-name\\">THING</span> Sunscreen</span>\\n- <span pd-shadow-id=\\"2330\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-lightorange\\"><span pd-shadow-id=\\"2331\\" text=\\"T\\" class=\\"promptdown-var-name\\">THING</span> Volleyball</span>\\n</p></pre>\\n</div>"},{"id":1,"path":"/features/examples/2-constraining.html","title":"⛓️ Constrained LLMs","description":"<p>LMQL's support for constrained generation enables robust interfacing, to integrate LLMs safely into your applications.<a href=\\"../../docs/language/constraints.html\\">Learn More →</a></p>\\n","code":"<div class=\\"language-lmql vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">lmql</span><pre class=\\"hljs\\"><code><span class=\\"line\\"><span class=\\"hljs-comment\\"># top-level strings are prompts</span>\\n<span class=\\"hljs-string\\">&quot;Tell me a joke:\\\\n&quot;</span>\\n\\n<span class=\\"hljs-comment\\"># use &#x27;where&#x27; constraints to control and restrict generation</span>\\n<span class=\\"hljs-string\\">&quot;Q:<span class=\\"hljs-placeholder\\">[JOKE]</span>\\\\n&quot;</span> <span class=\\"hljs-keyword\\">where</span> <span class=\\"hljs-built_in\\">len</span>(JOKE) &lt; <span class=\\"hljs-number\\">120</span> <span class=\\"hljs-keyword\\">and</span> STOPS_AT(JOKE, <span class=\\"hljs-string\\">&quot;?&quot;</span>)\\n\\n<span class=\\"hljs-string\\">&quot;A:<span class=\\"hljs-placeholder\\">[PUNCHLINE]</span>\\\\n&quot;</span> <span class=\\"hljs-keyword\\">where</span> \\\\ \\n    STOPS_AT(PUNCHLINE, <span class=\\"hljs-string\\">&quot;\\\\n&quot;</span>) <span class=\\"hljs-keyword\\">and</span> <span class=\\"hljs-built_in\\">len</span>(TOKENS(PUNCHLINE)) &gt; <span class=\\"hljs-number\\">1</span>\\n</span></code></pre>\\n</div>","output":"<div class=\\"language-promptdown vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">promptdown</span><pre pd-text=\\"Tell me a joke:\\n\\nQ: [JOKE| What did the fish say when it hit the wall?]\\nA: [PUNCHLINE| Dam!]\\n\\" animate=\\"true\\" __animate=\\"true\\" animate-speed=\\"50\\" class=\\"promptdown promptdown-compiled\\" style=\\"opacity: 1;\\"><p pd-shadow-id=\\"2337\\" text=\\"T\\" pd-insertion-point=\\"true\\">Tell me a joke:\\n\\nQ: <span pd-shadow-id=\\"2339\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-lightorange\\"><span pd-shadow-id=\\"2340\\" text=\\"J\\" class=\\"promptdown-var-name\\">JOKE</span> What did the fish say when it hit the wall?</span>\\nA: <span pd-shadow-id=\\"2345\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-orange\\"><span pd-shadow-id=\\"2346\\" text=\\"P\\" class=\\"promptdown-var-name\\">PUNCHLINE</span> Dam</span>\\n</p></pre>\\n</div>"},{"id":2,"path":"/features/examples/2.5-data-types.html","title":"🔢 Types and Regex","description":"<p>LMQL supports integer and regex constraints, enabling advanced output formatting. The results are automatically represented as the appropriate Python type, and can be manipulated as such.</p>\\n","code":"<div class=\\"language-lmql vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">lmql</span><pre class=\\"hljs\\"><code><span class=\\"line\\"><span class=\\"hljs-comment\\"># restrict generation to MM/DD format</span>\\n<span class=\\"hljs-string\\">&quot;Q: It&#x27;s the last day of June. What day is it?\\\\n&quot;</span>\\n<span class=\\"hljs-string\\">&quot;A: Today is <span class=\\"hljs-placeholder\\">[RESPONSE: r<span class=\\"hljs-string\\">&#x27;[0-9]<span class=\\"hljs-subst\\">{<span class=\\"hljs-number\\">2</span>}</span>/[0-9]<span class=\\"hljs-subst\\">{<span class=\\"hljs-number\\">2</span>}</span>&#x27;</span>]</span>\\\\n&quot;</span>\\n\\n<span class=\\"hljs-comment\\"># generate numbers</span>\\n<span class=\\"hljs-string\\">&quot;Q: What&#x27;s the month number?\\\\n&quot;</span>\\n<span class=\\"hljs-string\\">&quot;A: <span class=\\"hljs-placeholder\\">[ANSWER: <span class=\\"hljs-built_in\\">int</span>]</span>&quot;</span>\\n\\n<span class=\\"hljs-comment\\"># results are automatically cast to int...</span>\\n<span class=\\"hljs-built_in\\">type</span>(ANSWER) <span class=\\"hljs-comment\\"># -&gt; int</span>\\n\\n<span class=\\"hljs-comment\\"># ...and can be easily manipulated</span>\\n<span class=\\"hljs-number\\">10</span> * ANSWER <span class=\\"hljs-comment\\"># -&gt; 60</span>\\n</span></code></pre>\\n</div>","output":"<div class=\\"language-promptdown vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">promptdown</span><pre pd-text=\\"Q: It's the last day of June. What day is it?\\nA: Today is [RESPONSE| 30/06]\\n\\nQ: What's the month number?\\nA: [ANSWER| 6]\\n\\" animate=\\"true\\" __animate=\\"true\\" animate-speed=\\"50\\" class=\\"promptdown promptdown-compiled\\" style=\\"opacity: 1;\\"><p pd-shadow-id=\\"2352\\" text=\\"Q\\" pd-insertion-point=\\"true\\">Q: It's the last day of June. What day is it?\\nA: Today is <span pd-shadow-id=\\"2354\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-pink\\"><span pd-shadow-id=\\"2355\\" text=\\"R\\" class=\\"promptdown-var-name\\">RESPONSE</span> 30/06</span>\\n\\nQ: What's the month number?\\nA: <span pd-shadow-id=\\"2360\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-ochre\\"><span pd-shadow-id=\\"2361\\" text=\\"A\\" class=\\"promptdown-var-name\\">ANSWER</span> 6</span>\\n</p></pre>\\n</div>"},{"id":3,"path":"/features/examples/3-multi-part.html","title":"🧠 Multi-Part Prompts","description":"<p>LMQL's programming model supports multi-part prompt programs, enabling enhanced controls over the LLM reasoning process.</p>\\n","code":"<div class=\\"language-lmql vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">lmql</span><pre class=\\"hljs\\"><code><span class=\\"line\\"><span class=\\"hljs-comment\\"># use multi-part prompting for complicated questions</span>\\n<span class=\\"hljs-string\\">&quot;Q: It was Sept. 1st, 2021 a week ago. What is the date 10 days ago in MM/DD/YYYY?&quot;</span>\\n<span class=\\"hljs-string\\">&quot;Answer Choices: (A) 08/29/2021 (B) 08/28/2021 (C) 08/29/1925 (D) 08/30/2021 (E) 05/25/2021 (F) 09/19/2021&quot;</span>\\n\\n<span class=\\"hljs-comment\\"># use a reasoning step to break down the problem</span>\\n<span class=\\"hljs-string\\">&quot;A: Let&#x27;s think step by step.\\\\n <span class=\\"hljs-placeholder\\">[REASONING]</span>&quot;</span>\\n\\n<span class=\\"hljs-comment\\"># use a constrained variable to extract the final response</span>\\n<span class=\\"hljs-string\\">&quot;Therefore, the answer is <span class=\\"hljs-placeholder\\">[ANSWER]</span>&quot;</span> <span class=\\"hljs-keyword\\">where</span> \\\\\\n    ANSWER <span class=\\"hljs-keyword\\">in</span> [<span class=\\"hljs-string\\">&quot;A&quot;</span>, <span class=\\"hljs-string\\">&quot;B&quot;</span>, <span class=\\"hljs-string\\">&quot;C&quot;</span>, <span class=\\"hljs-string\\">&quot;D&quot;</span>, <span class=\\"hljs-string\\">&quot;E&quot;</span>, <span class=\\"hljs-string\\">&quot;F&quot;</span>]\\n\\n<span class=\\"hljs-comment\\"># access results just like a normal variable</span>\\nANSWER <span class=\\"hljs-comment\\"># &quot;A&quot;</span>\\n</span></code></pre>\\n</div>","output":"<div class=\\"language-promptdown vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">promptdown</span><pre pd-text=\\"Q: It was Sept. 1st, 2021 a week ago. What is the date 10 days ago in MM/DD/YYYY?\\nAnswer Choices: (A) 08/29/2021 (B) 08/28/2021 (C) 08/29/1925 (D) 08/30/2021 (E) 05/25/2021 (F) 09/19/2021\\n\\nA: Let's think step by step.\\n[REASONING(color='red')| Sept. 1st, 2021 was a week ago, so 10 days ago would be 8 days before that, which is August 23rd, 2021, so the answer is (A) 08/29/2021.]\\n\\nTherefore, the answer is [ANSWER| A]\\n\\" animate=\\"true\\" __animate=\\"true\\" animate-speed=\\"50\\" class=\\"promptdown promptdown-compiled\\" style=\\"opacity: 1;\\"><p pd-shadow-id=\\"2367\\" text=\\"Q\\" pd-insertion-point=\\"true\\">Q: It was Sept. 1st, 2021 a week ago. What is the date 10 days ago in MM/DD/YYYY?\\nAnswer Choices: (A) 08/29/2021 (B) 08/28/2021 (C) 08/29/1925 (D) 08/30/2021 (E) 05/25/2021 (F) 09/19/2021\\n\\nA: Let's think step by step.\\n<span pd-shadow-id=\\"2369\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-lightorange\\"><span pd-shadow-id=\\"2370\\" text=\\"R\\" class=\\"promptdown-var-name\\">REASONING</span> Sept. 1st, 2021 was a week ago, so 10 days ago would be 8 days before that, which is August 23rd, 2021, so the answer is (A) 08/29/2021.</span>\\n\\nTherefore, the answer is <span pd-shadow-id=\\"2375\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-ochre\\"><span pd-shadow-id=\\"2376\\" text=\\"A\\" class=\\"promptdown-var-name\\">ANSWER</span> A</span>\\n</p></pre>\\n</div>"},{"id":4,"path":"/features/examples/3.5-distributions.html","title":"📐 Measure Distributions","description":"<p>Apart from text generation, LMQL also <em>measures model scores</em>, allowing users to extract classification results and confidence scores.</p>\\n","code":"<div class=\\"language-lmql vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">lmql</span><pre class=\\"hljs\\"><code><span class=\\"line\\"><span class=\\"hljs-comment\\"># prompt with a data sample</span>\\n<span class=\\"hljs-string\\">&quot;Review: We had a great stay. Hiking in the mountains was fabulous and the food is really good.\\\\n&quot;</span>\\n\\n<span class=\\"hljs-comment\\"># instruct model to do sentiment analysis</span>\\n<span class=\\"hljs-string\\">&quot;Q: What is the underlying sentiment of this review and why?\\\\n&quot;</span>\\n\\n<span class=\\"hljs-comment\\"># generate a text-based analysis</span>\\n<span class=\\"hljs-string\\">&quot;A:<span class=\\"hljs-placeholder\\">[ANALYSIS]</span>\\\\n&quot;</span>\\n\\n<span class=\\"hljs-comment\\"># based on the analysis, measure certainity about the sentiment</span>\\n<span class=\\"hljs-string\\">&quot;Based on this, the overall sentiment of the message can be considered to be<span class=\\"hljs-placeholder\\">[CLASSIFICATION]</span>&quot;</span> <span class=\\"hljs-keyword\\">distribution</span> \\\\\\n   CLASSIFICATION <span class=\\"hljs-keyword\\">in</span> [<span class=\\"hljs-string\\">&quot; positive&quot;</span>, <span class=\\"hljs-string\\">&quot; neutral&quot;</span>, <span class=\\"hljs-string\\">&quot; negative&quot;</span>]\\n</span></code></pre>\\n</div>","output":"<div class=\\"language-promptdown vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">promptdown</span><pre pd-text=\\"Review: We had a great stay. Hiking in the mountains was fabulous and the food is really good.\\n\\nQ: What is the underlying sentiment of this review and why?\\n\\nA: [ANALYSIS|Positive, because the reviewer enjoyed their stay and had positive experiences with both the activities and food.]\\n\\nBased on this, the overall sentiment of the message \\ncan be considered to be [_CLS(color='ablue')|\\\\[CLASSIFICATION\\\\]]\\n\\n\\n\\n\\n\\n\\n\\" animate=\\"true\\" __animate=\\"true\\" animate-speed=\\"50\\" class=\\"promptdown promptdown-compiled\\" style=\\"opacity: 1;\\"><p pd-shadow-id=\\"2382\\" text=\\"R\\" pd-insertion-point=\\"true\\">Review: We had a great stay. Hiking in the mountains was fabulous and the food is really good.\\n\\nQ: What is the underlying sentiment of this review and why?\\n\\nA: <span pd-shadow-id=\\"2384\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-red\\"><span pd-shadow-id=\\"2385\\" text=\\"A\\" class=\\"promptdown-var-name\\">ANALYSIS</span>Positive, because the reviewer enjoyed their stay and had positive experiences with both the activities and food.</span>\\n\\nBased on this, the overall sentiment of the message \\ncan be considered to be <span pd-shadow-id=\\"2390\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-blue\\"><span pd-shadow-id=\\"2391\\" text=\\"C\\" class=\\"promptdown-var-name\\" style=\\"display: none;\\">CLS</span>[CLASSIFICATION]</span>\\n\\n\\n\\n\\n\\n\\n</p></pre>\\n</div><div class=\\"distribution\\">\\n   <i>P(<b>CLASSIFICATION</b>) =</i> \\n   <div>\\n   -  <b>positive 0.9998711120293567</b><br/>\\n   -  neutral 0.00012790777085508993<br/>\\n   -  negative   9.801997880775052e-07\\n   </div>\\n</div>"},{"id":5,"path":"/features/examples/3.6-python.html","title":"🐍 Python Support","description":"<p>LMQL can be used directly from within Python, allowing for seamless integration with your existing codebase.</p>\\n","code":"<div class=\\"language-python vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre class=\\"hljs\\"><code><span class=\\"line\\"><span class=\\"hljs-keyword\\">import</span> lmql\\n\\n<span class=\\"hljs-comment\\"># defines an LMQL function from within Python</span>\\n<span class=\\"hljs-meta\\">@lmql.query</span>\\n<span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title function_\\">say</span>(<span class=\\"hljs-params\\">phrase</span>):\\n    <span class=\\"hljs-inline-lmql\\"><span style='opacity: 0.4'>&#x27;&#x27;&#x27;lmql</span>\\n    <span class=\\"hljs-comment\\"># we can seamlessly use &#x27;phrase&#x27; in LMQL</span>\\n    <span class=\\"hljs-string\\">&quot;Say &#x27;<span class=\\"hljs-subst\\">{phrase}</span>&#x27;: <span class=\\"hljs-placeholder\\">[TEST]</span>&quot;</span>\\n    <span class=\\"hljs-comment\\"># return the result to the caller</span>\\n    <span class=\\"hljs-keyword\\">return</span> TEST\\n    &#x27;&#x27;&#x27;</span>\\n\\n<span class=\\"hljs-comment\\"># call your LMQL function like any other Python function</span>\\n<span class=\\"hljs-built_in\\">print</span>(say(<span class=\\"hljs-string\\">&quot;Hello World!&quot;</span>, model=<span class=\\"hljs-string\\">&quot;openai/gpt-3.5-turbo&quot;</span>))\\n</span></code></pre>\\n</div>","output":"<div class=\\"language-promptdown vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">promptdown</span><pre pd-text=\\"Say 'Hello World!': [TEST| Hello World!]\\n\\" animate=\\"true\\" __animate=\\"true\\" animate-speed=\\"50\\" class=\\"promptdown promptdown-compiled\\" style=\\"opacity: 1;\\"><p pd-shadow-id=\\"2397\\" text=\\"S\\" pd-insertion-point=\\"true\\">Say 'Hello World': <span pd-shadow-id=\\"2399\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-pink\\"><span pd-shadow-id=\\"2400\\" text=\\"T\\" class=\\"promptdown-var-name\\">TEST</span> Hello World</span>\\n</p></pre>\\n</div>"},{"id":6,"path":"/features/examples/4-meta-prompting.html","title":"🌳 Meta Prompting","description":"<p>LMQL supports <em>program-level</em> decoding algorithms like <code>beam</code>, <code>sample</code> and <code>best_k</code>, allowing for a branching exploration of multi-step reasoning flows.</p>\\n","code":"<div class=\\"language-lmql vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">lmql</span><pre class=\\"hljs\\"><code><span class=\\"line\\"><span class=\\"hljs-comment\\"># specify a decoding algorithm (e.g. beam, sample, best_k)</span>\\n<span class=\\"hljs-comment\\"># to enable multi-branch exploration of your program</span>\\n<span class=\\"hljs-keyword\\">beam</span>(n=<span class=\\"hljs-number\\">2</span>)\\n\\n<span class=\\"hljs-comment\\"># pose a question</span>\\n<span class=\\"hljs-string\\">&quot;Q: What are Large Language Models?\\\\n\\\\n&quot;</span>\\n\\n<span class=\\"hljs-comment\\"># use multi-part meta prompting for improved reasoning</span>\\n<span class=\\"hljs-string\\">&quot;A good person to answer this question would be<span class=\\"hljs-placeholder\\">[EXPERT]</span>\\\\n\\\\n&quot;</span> <span class=\\"hljs-keyword\\">where</span> STOPS_AT(EXPERT, <span class=\\"hljs-string\\">&quot;.&quot;</span>) <span class=\\"hljs-keyword\\">and</span> STOPS_AT(EXPERT, <span class=\\"hljs-string\\">&quot;\\\\n&quot;</span>)\\n\\n<span class=\\"hljs-comment\\"># process intermediate results in Python</span>\\nexpert_name = EXPERT.rstrip(<span class=\\"hljs-string\\">&quot;.\\\\n&quot;</span>)\\n\\n<span class=\\"hljs-comment\\"># generate the final response by leveraging the expert</span>\\n<span class=\\"hljs-string\\">&quot;For instance,<span class=\\"hljs-subst\\">{expert_name}</span> would answer <span class=\\"hljs-placeholder\\">[ANSWER]</span>&quot;</span> \\\\ \\n    <span class=\\"hljs-keyword\\">where</span> STOPS_AT(ANSWER, <span class=\\"hljs-string\\">&quot;.&quot;</span>) \\n</span></code></pre>\\n</div>","output":"<div class=\\"language-promptdown vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">promptdown</span><pre pd-text=\\"Q: What are Large Language Models?⏎\\n\\nA good person to answer this question would be [EXPERT| a data scientist or a machine learning engineer.]\\n\\nFor instance, (a data scientist or a machine learning engineer) would answer [ANSWER| this question by explaining that large language models are a type of artificial intelligence (AI) model that uses deep learning algorithms to process large amounts of natural language data.]\\n\\" animate=\\"true\\" __animate=\\"true\\" animate-speed=\\"50\\" class=\\"promptdown promptdown-compiled\\" style=\\"opacity: 1;\\"><p pd-shadow-id=\\"2406\\" text=\\"Q\\" pd-insertion-point=\\"true\\">Q: What are Large Language Models?⏎\\n\\nA good person to answer this question would be <span pd-shadow-id=\\"2408\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-purple\\"><span pd-shadow-id=\\"2409\\" text=\\"E\\" class=\\"promptdown-var-name\\">EXPERT</span> a data scientist or a machine learning engineer.</span>\\n\\nFor instance, (a data scientist or a machine learning engineer) would answer <span pd-shadow-id=\\"2414\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-ochre\\"><span pd-shadow-id=\\"2415\\" text=\\"A\\" class=\\"promptdown-var-name\\">ANSWER</span> this question by explaining that large language models are a type of artificial intelligence (AI) model that uses deep learning algorithms to process large amounts of natural language data.</span>\\n</p></pre>\\n</div>"},{"id":7,"path":"/features/examples/5-wikipedia.html","title":"🌎 Tool Augmentation","description":"<p>LMQL supports <em>arbitrary Python function calls during generation</em>, enabling seamless integration with external tools and APIs, augmenting the model's capabilities.</p>\\n","code":"<div class=\\"language-lmql vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">lmql</span><pre class=\\"hljs\\"><code><span class=\\"line\\"><span class=\\"hljs-comment\\"># define or import an external function</span>\\n<span class=\\"hljs-keyword\\">async</span> <span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title function_\\">wikipedia</span>(<span class=\\"hljs-params\\">q</span>): ...\\n\\n<span class=\\"hljs-comment\\"># pose a question</span>\\n<span class=\\"hljs-string\\">&quot;Q: From which countries did the Norse originate?\\\\n&quot;</span>\\n\\n<span class=\\"hljs-comment\\"># invoke &#x27;wikipedia&#x27; function during reasoning</span>\\n<span class=\\"hljs-string\\">&quot;Action: Let&#x27;s search Wikipedia for the \\\\\\n term &#x27;<span class=\\"hljs-placeholder\\">[TERM]</span>\\\\n&quot;</span> <span class=\\"hljs-keyword\\">where</span> STOPS_AT(TERM, <span class=\\"hljs-string\\">&quot;&#x27;&quot;</span>)\\n\\n<span class=\\"hljs-comment\\"># seamlessly call it *during* generation</span>\\nresult = <span class=\\"hljs-keyword\\">await</span> wikipedia(TERM)\\n<span class=\\"hljs-string\\">&quot;Result: <span class=\\"hljs-subst\\">{result}</span>\\\\n&quot;</span>\\n\\n<span class=\\"hljs-comment\\"># generate final response using retrieved data</span>\\n<span class=\\"hljs-string\\">&quot;Final Answer:<span class=\\"hljs-placeholder\\">[ANSWER]</span>&quot;</span>\\n</span></code></pre>\\n</div>","output":"<div class=\\"language-promptdown vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">promptdown</span><pre pd-text=\\"Q: From which countries did the Norse originate?\\n\\nAction: Let's search Wikipedia for the term [TERM| 'Norse']\\nResult: (Norse is a demonym for Norsemen, a Medieval North Germanic ethnolinguistic group ancestral to modern Scandinavians, defined as speakers of Old Norse from about the 9th to the 13th centuries.)\\n\\nFinal Answer: [ANSWER| The Norse originated from Scandinavia.]\\n\\" animate=\\"true\\" __animate=\\"true\\" animate-speed=\\"50\\" class=\\"promptdown promptdown-compiled\\" style=\\"opacity: 1;\\"><p pd-shadow-id=\\"2421\\" text=\\"Q\\" pd-insertion-point=\\"true\\">Q: From which countries did the Norse originate?\\n\\nAction: Let's search Wikipedia for the term <span pd-shadow-id=\\"2423\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-blue\\"><span pd-shadow-id=\\"2424\\" text=\\"T\\" class=\\"promptdown-var-name\\">TERM</span> 'Norse'</span>\\nResult: (Norse is a demonym for Norsemen, a Medieval North Germanic ethnolinguistic group ancestral to modern Scandinavians, defined as speakers of Old Norse from about the 9th to the 13th centuries.)\\n\\nFinal Answer: <span pd-shadow-id=\\"2429\\" pd-instant=\\"false\\" text=\\"\\" class=\\"promptdown-var color-ochre\\"><span pd-shadow-id=\\"2430\\" text=\\"A\\" class=\\"promptdown-var-name\\">ANSWER</span> The Norse originated from Scandinavia.</span>\\n</p></pre>\\n</div>"},{"id":8,"path":"/features/examples/6-chat.html","title":"💬 Chatbots","description":"<p>Implement custom chatbots with ease, using LMQL's direct integration of interactive generation and result streaming.</p>\\n","code":"<div class=\\"language-lmql vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">lmql</span><pre class=\\"hljs\\"><code><span class=\\"line\\"><span class=\\"hljs-comment\\"># {:system} and other tags can be used to control chat-tuned models</span>\\n<span class=\\"hljs-string\\">&quot;<span class=\\"hljs-subst\\">{:system}</span> You are a marketing chatbot for the language model query language (LMQL).&quot;</span>\\n\\n<span class=\\"hljs-comment\\"># implement a chatbot as simple loop</span>\\n<span class=\\"hljs-keyword\\">while</span> <span class=\\"hljs-literal\\">True</span>:\\n   <span class=\\"hljs-comment\\"># integrate user input just like in a standard Python program</span>\\n   <span class=\\"hljs-string\\">&quot;<span class=\\"hljs-subst\\">{:user}</span> <span class=\\"hljs-subst\\">{<span class=\\"hljs-keyword\\">await</span> <span class=\\"hljs-built_in\\">input</span>()}</span>&quot;</span>\\n   <span class=\\"hljs-string\\">&quot;<span class=\\"hljs-subst\\">{:assistant}</span> <span class=\\"hljs-placeholder\\">[ANSWER]</span>&quot;</span>\\n</span></code></pre>\\n</div>","output":"<div class=\\"language-promptdown vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">promptdown</span><pre pd-text=\\"![bubble:user|What is the best way to interact with LLMs?]\\n\\n![bubble:assistant|[ANSWER|] The best way to interact with LLMs (Language Model Models) is through a query language like LMQL. LMQL allows you to easily and efficiently query large language models and retrieve the information you need. With LMQL, you can specify the input text, the output format, and the model you want to use , all in a single query. This makes it easy to integrate LLMs into your applications and workflows, and to get the most out of these powerful language models. Additionally, LMQL provides a standardized way of interacting with LLMs, which makes it easier for developers and data scientists to collaborate and share their work .]\\n\\" animate=\\"true\\" __animate=\\"true\\" animate-speed=\\"50\\" class=\\"promptdown promptdown-compiled\\" style=\\"opacity: 1;\\"><p pd-shadow-id=\\"2436\\" text=\\"\\" pd-insertion-point=\\"true\\"><div pd-shadow-id=\\"2440\\" class=\\"promptdown-bubble-container user\\"><span pd-shadow-id=\\"2437\\" pd-instant=\\"true\\" text=\\"\\" class=\\"promptdown-var promptdown-bubble user\\"><span pd-shadow-id=\\"2438\\" text=\\"b\\" class=\\"promptdown-var-name\\">bubble:user</span>What is the best way to interact with LLMs?</span></div>\\n\\n<div pd-shadow-id=\\"2447\\" class=\\"promptdown-bubble-container assistant\\"><span pd-shadow-id=\\"2444\\" pd-instant=\\"true\\" text=\\"\\" pd-ignore-whitespace=\\"true\\" class=\\"promptdown-var promptdown-bubble assistant\\"><span pd-shadow-id=\\"2445\\" text=\\"b\\" class=\\"promptdown-var-name\\">bubble:assistant</span><span pd-shadow-id=\\"2449\\" pd-instant=\\"true\\" text=\\"\\" class=\\"promptdown-var color-ochre\\"><span pd-shadow-id=\\"2450\\" text=\\"A\\" class=\\"promptdown-var-name\\">ANSWER</span></span> The best way to interact with LLMs (Language Model Models) is through a query language like LMQL. LMQL allows you to easily and efficiently query large language models and retrieve the information you need. With LMQL, you can specify the input text, the output format, and the model you want to use , all in a single query. This makes it easy to integrate LLMs into your applications and workflows, and to get the most out of these powerful language models. Additionally, LMQL provides a standardized way of interacting with LLMs, which makes it easier for developers and data scientists to collaborate and share their work .</span></div>\\n</p></pre>\\n</div>"}]`);const O={},D={class:"code-by-code"},$={class:"left"},F={class:"right"};function B(a,n){return p(),o("div",D,[s("div",$,[i(a.$slots,"code")]),s("div",F,[i(a.$slots,"output")])])}const G=m(O,[["render",B]]);const y=a=>(f("data-v-96cfe14a"),a=a(),b(),a),J={class:"examples"},z=y(()=>s("div",{style:{"margin-top":"60pt"}},null,-1)),V={class:"btn-group",role:"group","aria-label":"Basic example"},U=["onClick"],K=["innerHTML"],X=y(()=>s("h2",null,"LMQL",-1)),Z=["innerHTML"],ss=y(()=>s("h2",null,"Model Output",-1)),as=["innerHTML"],ns={__name:"LMExamples",setup(a){const n=q(r[0].id);return(w,l)=>(p(),o("div",J,[z,s("h1",null,[i(w.$slots,"title",{},void 0,!0)]),s("div",V,[(p(!0),o(_,null,j(c(r),t=>(p(),o("button",{key:t.title,class:x(["btn btn-primary",{active:n.value===t.id}]),onClick:is=>n.value=t.id},g(t.title),11,U))),128))]),s("div",{innerHTML:c(r).find(t=>t.id===n.value).description,class:"description"},null,8,K),h(G,null,{code:e(()=>[X,s("div",{innerHTML:c(r).find(t=>t.id===n.value).code},null,8,Z)]),output:e(()=>[ss,s("div",{innerHTML:c(r).find(t=>t.id===n.value).output},null,8,as)]),_:1})]))}},ts=m(ns,[["__scopeId","data-v-96cfe14a"]]);const es=s("div",{class:"banner"},[s("p",null,[d("LMQL 0.7 is now available. "),s("a",{href:"/blog/posts/release-0.7.html"},"Read the announcement post"),d(" to learn more about this release.")])],-1),ps=s("b",null,"types, templates, constraints and an optimizing runtime.",-1),os=["innerHTML"],ls=["innerHTML"],hs=JSON.parse('{"title":"LMQL is a programming language for LLM interaction.","description":"","frontmatter":{"layout":"home","title":"LMQL is a programming language for LLM interaction.","outline":false},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),ds={name:"index.md"},ms=Object.assign(ds,{setup(a){return(n,w)=>(p(),o("div",null,[es,h(Q,null,{title:e(()=>[d("LMQL is a programming language for LLMs.")]),subtitle:e(()=>[d("Robust and modular LLM prompting using "),ps]),_:1}),(p(!0),o(_,null,j(c(H),l=>(p(),o("div",{key:l.title},[h(Y,{template:l.template,new:l.new},M({template:e(()=>[d(g(l.template),1)]),description:e(()=>[s("div",{innerHTML:l.description},null,8,os)]),default:e(()=>[d(g(l.title)+" ",1)]),_:2},[l.snippet?{name:"code",fn:e(()=>[s("div",{innerHTML:l.snippet},null,8,ls)]),key:"0"}:void 0]),1032,["template","new"])]))),128)),h(ts,null,{title:e(()=>[d("Explore LMQL")]),description:e(()=>[d("LMQL is a versatile tool for leveraging the full potential of LLMs. Here are some examples of what you can do with it:")]),_:1})]))}});export{hs as __pageData,ms as default};
